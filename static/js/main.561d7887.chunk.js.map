{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Container/App.js","reportWebVitals.js","index.js"],"names":["Cards","_ref","name","email","id","react_default","a","createElement","className","alt","src","CardList","robots","map","user","i","Card","key","username","SearchBox","searchChange","searchField","type","placeholder","onChange","Scrollbox","props","style","overflow","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","React","Component","App","onTextSearchChange","event","target","value","_this2","fetch","then","response","json","_this3","filterRobots","filter","toLowerCase","includes","toLocaleLowerCase","length","Components_SearchBox","Scroll","Components_ErrorBoundary","Components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_Container_App","document","getElementById"],"mappings":"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","file":"static/js/main.561d7887.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst Cards =({name,email,id}) =>{\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw shadow-5\">\r\n             <img alt=\"ROBO_ONE\" src='https://robohash.org/${id}?200x200' />\r\n            <div>\r\n                <h2>{email}</h2>\r\n                <p>{name}</p>\r\n            </div>    \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport Cards from './Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n    return( \r\n        <div>{\r\n            robots.map((user,i) =>{\r\n                return (\r\n                    <Cards key={i}  id={robots[i].id}  name={robots[i].username}  email={robots[i].email} />\r\n                );        \r\n            })\r\n            }          \r\n         </div>\r\n     )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange,searchField}) =>{\r\n    return(\r\n        <div>\r\n            <input type=\"search\" placeholder=\"search robots\" onChange={searchChange} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scrollbox = (props) =>{\r\n        return(\r\n            <div style={{ overflow:'scroll' , border:'5px solid white' , height:'750px' }}>\r\n                {props.children}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Scrollbox;","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        hasError:false\r\n    }\r\n\r\n}\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n render(){\r\n     if(this.state.hasError)  \r\n        return <h1>Has Error</h1>;\r\n    \r\n       return this.props.children;\r\n }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport '../Container/App.css';\r\nimport Scrollbox from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary'\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots:[],\r\n            searchField :''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n         .then(response => response.json())\r\n         .then(json => this.setState({robots:json}))\r\n        \r\n    }\r\n    onTextSearchChange = (event)=>{\r\n            this.setState({searchField:event.target.value});\r\n    }\r\n render(){\r\n    const filterRobots = this.state.robots.filter( robots =>{\r\n        return robots.name.toLowerCase().includes(this.state.searchField.toLocaleLowerCase())\r\n    })\r\n\r\n    if(this.state.robots.length === 0){\r\n        return <h1>Loading...</h1>\r\n    }\r\n  else{\r\n  return(\r\n     \r\n        <div className=\"tc\">\r\n             <h1 className=\"f2\">ROBO FRIENDS</h1>\r\n             <SearchBox searchChange={this.onTextSearchChange}/>\r\n             <Scrollbox>\r\n                 <ErrorBoundary>\r\n                   <CardList robots={filterRobots} />\r\n                 </ErrorBoundary>\r\n             </Scrollbox>    \r\n        </div>\r\n     \r\n  );\r\n  }\r\n }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App> </App> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}